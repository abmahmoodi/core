<% title t(:'general.dashboard') %>
<div class="container-fluid">
  <div class="row top-elements">
    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 element-parent">
      <div class="element">
        <p class="element-title">بدهی واحد ها</p>
        <p class="element-value">۱۷,۳۰۱,۰۰۰<span>ریال</span></p>
      </div>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 element-parent">
      <div class="element">
        <p class="element-title">واحد های بدهکار</p>
        <p class="element-value">۳<span> واحد </span></p>
      </div>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 element-parent">
      <div class="element">
        <p class="element-title">واحد های تسویه شده</p>
        <p class="element-value">۳<span> واحد </span></p>
      </div>
    </div>
    <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 element-parent">
      <div class="element">
        <p class="element-title">موجودی صندوق واحد ها</p>
        <p class="element-value">۱۷,۳۰۱,۰۰۰<span>ریال</span></p>
      </div>
    </div>
  </div>
  <div class="chart-parent">
    <div class="row" style="padding-right: 20px"><p>شارژها</p><p>۱۲ شارژ اعلام شده اخیر بدون احتساب جریمه</p></div>
    <div class="row chart" id="chart-recent-charge"></div><br><br><br><br>
  </div>
  <div class="chart-parent">
    <div class="row" style="padding-right: 20px">
      <div class="col-md-6 col-sm-6 col-lg-6">
          <p>نسبت هزینه و درآمد</p><p>نسبت هزینه و درآمد شارژ اخیر</p>
      </div>
      <div class="col-md-6 col-sm-6 col-lg-6">
          <p>عناوین هزینه و درآمد</p><p>عناوین تفکیکی هزینه ها و درآمد های شارژ اخیر</p>
      </div>
    </div>
    <div class="row chart" id="chart-income1"></div><br><br><br><br>
  </div>
  <div class="row chart-parent">
    <div class="row chart" id="chart-total-charge"></div><br><br><br><br>
  </div>
  <div class="row chart-parent">
    <div class="row" style="padding-right: 20px">
      <p>گزارش میزان مصرف ساختمان در روز گذشته</p>
    </div>
    <div class="row chart" id="chart-consumption"></div><br><br>
  </div>
</div>
<script type="text/javascript">
        var recentChargeChart = echarts.init(document.getElementById('chart-recent-charge'));
        var xAxisData = [];
        var yAxisData = [];
        var data1 = [];
        var data2 = [];
        var month = [
            {name:"فروردین",number:1},
            {name:"اردیبهشت",number:2},
            {name:"خرداد",number:3},
            {name:"تیر",number:4},
            {name:"مرداد",number:5},
            {name:"شهریور",number:6},
            {name:"مهر",number:7},
            {name:"آبان",number:8},
            {name:"آذر",number:9},
            {name:"دی",number:10},
            {name:"بهمن",number:11},
            {name:"اسفند",number:12},
        ];
        var yAxisDataset = [
            {name: "۸۰۰ ریال"},
            {name: "۴۰۰ ریال"},
            {name: "۲۰۰ ریال"},
            {name: "۰ ریال"},
            {name: "-۲۰۰ ریال"},
            {name: "-۴۰۰ ریال"},
            {name: "-۸۰۰ ریال"}
        ];
        $.each(month, function (index,value) {
            object = {value: value.name,
                      textStyle: {
                          fontSize: 20,
                          color: '#666666'
                      }}
            xAxisData.push(object);
            data1.push((Math.random() * 2).toFixed(2));
            data2.push(-Math.random().toFixed(2));
        });
        $.each(yAxisDataset, function (index,value) {
            object = {value: value.name,
                textStyle: {
                    fontSize: 20,
                    color: '#666666',
                    fontFamily: 'arial'
                }}
            yAxisData.push(object);
        });
        var itemStyle = {
            normal: {
            },
            emphasis: {
                barBorderWidth: 1,
                shadowBlur: 10,
                shadowOffsetX: 0,
                shadowOffsetY: 0,
                shadowColor: 'rgba(0,0,0,0.5)'
            }
        };
        recent_charge_option = {
            backgroundColor: '#eee',
            legend: {
                data: ['bar', 'bar2'],
                align: 'left',
                left: 10
            },
            xAxis: {
                data: xAxisData,
                silent: false,
                axisLine: {onZero: true},
                splitLine: {show: false},
                splitArea: {show: false}
            },
            yAxis: {
                data: yAxisData,
                inverse: true,
                splitArea: {show: false}
            },
            grid: {
                left: 100
            },

            series: [
                {
                    name: 'bar',
                    type: 'bar',
                    stack: 'one',
                    itemStyle: itemStyle,
                    data: data1
                },
                {
                    name: 'bar2',
                    type: 'bar',
                    stack: 'one',
                    itemStyle: itemStyle,
                    data: data2
                },
                {
                    name: 'bar',
                    type: 'bar',
                    stack: 'one',
                    itemStyle: itemStyle,
                    data: data2
                },
                {
                    name: 'bar2',
                    type: 'bar',
                    stack: 'one',
                    itemStyle: itemStyle,
                    data: data1
                }
            ]
        };
        recentChargeChart.setOption(recent_charge_option);
</script>
<script>
    var incomeChart = echarts.init(document.getElementById('chart-income1'));
    var data = genData(50);

    ioption = {
        tooltip : {
            trigger: 'item',
            formatter: "{a} <br/>{b} : {c} ({d}%)"
        },
        legend: {
            type: 'scroll',
            orient: 'vertical',
            right: 10,
            top: 20,
            bottom: 20,
            data: [],

            selected: data.selected
        },
        grid: {
            height: '900px'
        },
        series : [
            {
                name: 'relativeIncome',
                type: 'pie',
                radius : '85%',
                center: ['20%', '50%'],
                data: data.seriesData,
                itemStyle: {
                    emphasis: {
                        shadowBlur: 10,
                        shadowOffsetX: 0,
                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                    }
                }
            },
            {
                name: 'titleIncome',
                type: 'pie',
                radius : '85%',
                center: ['70%', '50%'],
                data: data.seriesData,
                itemStyle: {
                    emphasis: {
                        shadowBlur: 10,
                        shadowOffsetX: 0,
                        shadowColor: 'rgba(0, 0, 0, 0.5)'
                    }
                }
            }
        ]
    };
    incomeChart.setOption(ioption);




    function genData(count) {
        var nameList = [
            '赵', '钱', '孙', '李', '周', '吴', '郑', '王', '冯', '陈', '褚', '卫', '蒋', '沈', '韩', '杨', '朱', '秦', '尤', '许', '何', '吕', '施', '张', '孔', '曹', '严', '华', '金', '魏', '陶', '姜', '戚', '谢', '邹', '喻', '柏', '水', '窦', '章', '云', '苏', '潘', '葛', '奚', '范', '彭', '郎', '鲁', '韦', '昌', '马', '苗', '凤', '花', '方', '俞', '任', '袁', '柳', '酆', '鲍', '史', '唐', '费', '廉', '岑', '薛', '雷', '贺', '倪', '汤', '滕', '殷', '罗', '毕', '郝', '邬', '安', '常', '乐', '于', '时', '傅', '皮', '卞', '齐', '康', '伍', '余', '元', '卜', '顾', '孟', '平', '黄', '和', '穆', '萧', '尹', '姚', '邵', '湛', '汪', '祁', '毛', '禹', '狄', '米', '贝', '明', '臧', '计', '伏', '成', '戴', '谈', '宋', '茅', '庞', '熊', '纪', '舒', '屈', '项', '祝', '董', '梁', '杜', '阮', '蓝', '闵', '席', '季', '麻', '强', '贾', '路', '娄', '危'
        ];
        var legendData = [];
        var seriesData = [];
        var selected = {};
        for (var i = 0; i < 50; i++) {
            name = Math.random() > 0.65
                ? makeWord(4, 1) + '·' + makeWord(3, 0)
                : makeWord(2, 1);
            legendData.push(name);
            seriesData.push({
                name: name,
                value: Math.round(Math.random() * 100000)
            });
            selected[name] = i < 6;
        }

        return {
            legendData: legendData,
            seriesData: seriesData,
            selected: selected
        };

        function makeWord(max, min) {
            var nameLen = Math.ceil(Math.random() * max + min);
            var name = [];
            for (var i = 0; i < nameLen; i++) {
                name.push(nameList[Math.round(Math.random() * nameList.length - 1)]);
            }
            return name.join('');
        }
    }

</script>
<script type="text/javascript" charset="utf-8">
    var totalChargeChart = echarts.init(document.getElementById('chart-total-charge'));
    var xAxisData = [];
    var yAxisData = [];
    var data1 = [];
    var data2 = [];
    var month = [
        {name:"فروردین",number:1},
        {name:"اردیبهشت",number:2},
        {name:"خرداد",number:3},
        {name:"تیر",number:4},
        {name:"مرداد",number:5},
        {name:"شهریور",number:6},
        {name:"مهر",number:7},
        {name:"آبان",number:8},
        {name:"آذر",number:9},
        {name:"دی",number:10},
        {name:"بهمن",number:11},
        {name:"اسفند",number:12},
    ];
    var yAxisDataset = [
        {name: "۸۰۰ ریال"},
        {name: "۴۰۰ ریال"},
        {name: "۲۰۰ ریال"},
        {name: "۰ ریال"},
        {name: "-۲۰۰ ریال"},
        {name: "-۴۰۰ ریال"},
        {name: "-۸۰۰ ریال"}
    ];
    $.each(month, function (index,value) {
        object = {value: value.name,
            textStyle: {
                fontSize: 20,
                color: '#666666'
            }}
        xAxisData.push(object);
        data1.push((Math.random() * 2).toFixed(2));
        data2.push(-Math.random().toFixed(2));
    });
    $.each(yAxisDataset, function (index,value) {
        object = {value: value.name,
            textStyle: {
                fontSize: 20,
                color: '#666666',
                fontFamily: 'arial'
            }}
        yAxisData.push(object);
    });
    var itemStyle = {
        normal: {
        },
        emphasis: {
            barBorderWidth: 1,
            shadowBlur: 10,
            shadowOffsetX: 0,
            shadowOffsetY: 0,
            shadowColor: 'rgba(0,0,0,0.5)'
        }
    };
    total_charge_option = {
        backgroundColor: '#eee',
        legend: {
            data: ['bar', 'bar2'],
            align: 'left',
            left: 10
        },
        xAxis: {
            data: xAxisData,
            silent: false,
            axisLine: {onZero: true},
            splitLine: {show: false},
            splitArea: {show: false}
        },
        yAxis: {
            data: yAxisData,
            inverse: true,
            splitArea: {show: false}
        },
        grid: {
            left: 100
        },

        series: [
            {
                name: 'bar',
                type: 'bar',
                stack: 'one',
                itemStyle: itemStyle,
                data: data1
            },
            {
                name: 'bar2',
                type: 'bar',
                stack: 'one',
                itemStyle: itemStyle,
                data: data2
            },
            {
                name: 'bar',
                type: 'bar',
                stack: 'one',
                itemStyle: itemStyle,
                data: data2
            },
            {
                name: 'bar2',
                type: 'bar',
                stack: 'one',
                itemStyle: itemStyle,
                data: data1
            }
        ]
    };
    totalChargeChart.setOption(total_charge_option);
</script>
<script type="text/javascript" charset="utf-8">
    var consumptionChart = echarts.init(document.getElementById('chart-consumption'));
    consumption_option = {
        tooltip : {
            trigger: 'axis'
        },
        legend: {
            data:['蒸发量','降水量']
        },
        calculable : true,
        xAxis : [
            {
                type : 'category',
                data : ['1月','2月','3月','4月','5月','6月','7月','8月','9月','10月','11月','12月']
            }
        ],
        yAxis : [
            {
                type : 'value'
            }
        ],
        series : [
            {
                name:'蒸发量',
                type:'bar',
                data:[2.0, 4.9, 7.0, 23.2, 25.6, 76.7, 135.6, 162.2, 32.6, 20.0, 6.4, 3.3],
                markPoint : {
                    data : [
                        {type : 'max', name: '最大值'},
                        {type : 'min', name: '最小值'}
                    ]
                },
                markLine : {
                    data : [
                        {type : 'average', name: '平均值'}
                    ]
                }
            },
            {
                name:'降水量',
                type:'bar',
                data:[2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3],
                markPoint : {
                    data : [
                        {name : '年最高', value : 182.2, xAxis: 7, yAxis: 183},
                        {name : '年最低', value : 2.3, xAxis: 11, yAxis: 3}
                    ]
                },
                markLine : {
                    data : [
                        {type : 'average', name : '平均值'}
                    ]
                }
            }
        ]
    };
    consumptionChart.setOption(consumption_option);

</script>

